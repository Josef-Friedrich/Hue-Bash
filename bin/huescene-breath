#! /bin/sh

. /etc/hue-shell/hue-shell.conf

while true ; do
	case "$1" in
		-b|--brightness-range)
			ARG_BRI_RANGE=$2
			shift 2
			;;

		-h|--help)
			_hue_usage
			break
			;;

		-H|--hue-range)
			ARG_HUE_RANGE=$2
			shift 2
			;;

		-l|--lights)
			ARG_LIGHTS=$2
			shift 2
			;;

		-t|--time-range)
			ARG_TIME_RANGE=$2
			shift 2
			;;

		*)
			break
			;;
	esac
done

# Default values.
if [ -z "$ARG_HUE_RANGE" ]; then
	HUE_RANGE="$(_hue_range 0:32766):$(_hue_range 32767:65535)"
else
	HUE_RANGE="$ARG_HUE_RANGE"
fi

if [ -z "$ARG_TIME_RANGE" ]; then
	TIME_RANGE="$(_hue_range 1:4):$(_hue_range 5:8)"
else
	TIME_RANGE="$ARG_TIME_RANGE"
fi

if [ -z "$ARG_BRI_RANGE" ]; then
	BRI_RANGE="$(_hue_range 1:100):$(_hue_range 100:255)"
else
	BRI_RANGE="$ARG_BRI_RANGE"
fi

_kill_all() {
	IFS=","
	for LIGHT in $ALL_LIGHTS ; do
		IFS="$OLD_IFS"
		eval "kill \$PID${LIGHT} > /dev/null 2>&1"
	done
}

# We can not use the _hue_trap function from the library
_hue_trap "_kill_all; _hue_reset; echo; exit"
_hue_stop

# Helper function.
#	$1: LIGHT
#	$2: HUE_RANGE
#	$3: TIME_RANGE
#	$4: BRI_RANGE
_breath() {
	TRANSTIME="$(_hue_range "$3")"
	BRI_START=${4%%:*}
	BRI_END=${4#*:}

	_hue_set_transit "$1" "$TRANSTIME" --hue "$(_hue_range "$2")" --bri "$BRI_END" --sat 255
	_hue_set_transit "$1" "$TRANSTIME" --bri "$BRI_START"
}

_loop_breath() {
	eval "HAS_PID=\$PID${LIGHT}"
	eval "IS_REACHABLE=\"\$REACHABLE${LIGHT}\""

	# -n STRING: the length of STRING is nonzero
	# -z STRING: the length of STRING is zero

	# Start lights
	# -z "$HAS_PID": has no PID
	# -n "$IS_REACHABLE": is reachable
	if [ -z "$HAS_PID" ] && [ -n "$IS_REACHABLE" ]; then
		_hue_log 1 "Go online light ${LIGHT}"
		_hue_log 2 "SET L: $LIGHT H: $HUE_RANGE T: $TIME_RANGE B: $BRI_RANGE"
		(
			while true; do
				_breath "$LIGHT" "$HUE_RANGE" "$TIME_RANGE" "$BRI_RANGE"
			done
		) &
		eval "PID${LIGHT}=$!"
	fi

	# Stop lights
	# -n "$HAS_PID": has PID
	# -z "$IS_REACHABLE": is not reachable
	if [ -n "$HAS_PID" ] && [ -z "$IS_REACHABLE" ]; then
		_hue_log 1 "Kill light ${LIGHT}"
		eval "kill \$PID${LIGHT}"
		eval "PID${LIGHT}=''"
	fi
}

_detect_lights() {
	LIGHTS_REACHABLE="$(_hue_get_lights_reachable)"

	# Unset all REACHABLEX variables
	IFS=","
	for LIGHT in $ALL_LIGHTS ; do
		IFS="$OLD_IFS"
		eval "REACHABLE${LIGHT}=''"
	done

	# Create for each reachable Light X a variable: REACHABLEX
	IFS=","
	for LIGHT in $LIGHTS_REACHABLE ; do
		IFS="$OLD_IFS"
		eval "REACHABLE${LIGHT}=1"
	done

	if [ -n "$ARG_LIGHTS" ]; then
		LOOP_LIGHTS="$ARG_LIGHTS"
	else
		LOOP_LIGHTS="$ALL_LIGHTS"
	fi

	IFS=","
	for LIGHT in $LOOP_LIGHTS ; do
		IFS="$OLD_IFS"
		_loop_breath
	done
}

_hue_log 1 "HUE_RANGE: $HUE_RANGE \
TIME_RANGE: $TIME_RANGE \
BRI_RANGE: $BRI_RANGE \
LIGHTS: $LIGHTS"


while true; do
	_detect_lights
	sleep "$REFRESH_INTERVAL"
done


# vim: set ts=8 sw=8 sts=8 et :
# sublime: tab_size 8;
