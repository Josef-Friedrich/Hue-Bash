#! /bin/sh

. /etc/hue-shell/hue-shell.conf

COMMAND="$DEFAULT_SCENE"
TRIGGERED=0
FILE_PID=$DIR_RUN_TMP/${BASENAME}.pid

_detect_bridge() {
	ping -c 1 -W 1 -w 1 $IP > /dev/null 2>&1

	if [ $? -eq 0 ]; then
		if [ "$TRIGGERED" = 0 ]; then
			TRIGGERED=1
			echo "Starting: $COMMAND (\$\$: $$)"
			_hue_log 1 "Starting: $COMMAND"
			eval "$COMMAND &"
			echo $! >> $DIR_RUN_TMP/hue-background-$PPID
		fi
	else
		if [ "$TRIGGERED" = 1 ]; then
			echo "Stopping: $COMMAND"
			_hue_log 1 "Stopping: $COMMAND"
			_hue_stop
			_hue_kill
		fi
		TRIGGERED=0
	fi
}

_is_running() {
	kill -0 $(cat $FILE_PID) > /dev/null 2>&1
	echo $?
}

_start() {
	if [ "$(_is_running)" = 0 ]; then
		echo "The service is already running."
	else
		(
		while true; do
			_detect_bridge
			sleep $REFRESH_INTERVAL
		done
		) &
		echo $! > $FILE_PID
		echo "Starting the service '${BASENAME}'."
	fi
}

_status() {
	if [ "$(_is_running)" = 0 ]; then
		echo "The service '${BASENAME}' is running."
		echo "This command is executed: $COMMAND"
	else
		echo "The service '${BASENAME}' is not running."
	fi
}

_stop() {
		kill $(cat $FILE_PID) > /dev/null 2>&1
		echo > $FILE_PID
		echo "Stopping the service '${BASENAME}'."
		_hue_stop
		_hue_kill
}

while true ; do
	case "$1" in

		start)
			_start
			shift
			;;

		status)
			_status
			shift
			;;

		stop)
			_stop
			shift
			;;

		-c|--command)
			COMMAND=$2
			shift 2
			;;

		-h|--help)
			_hue_usage
			;;

		-r|--refresh-interval)
			REFRESH_INTERVAL=$2
			shift 2
			;;

		*)
			break
			;;

	esac
done

exit 0
# vim: set ts=8 sw=8 sts=8 et :
# sublime: tab_size 8;
